drop table orders;
drop table client;
drop table route;
drop table truck;
drop table driver;
drop table place;
drop table payment;


-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2016-04-10 23:21:03 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE TABLE Client
  (
    client_id INTEGER NOT NULL ,
    fname     VARCHAR2 (30) ,
    lname     VARCHAR2 (30)
  ) ;
ALTER TABLE Client ADD CONSTRAINT Client_PK PRIMARY KEY ( client_id ) ;


CREATE TABLE Driver
  (
    driver_id INTEGER NOT NULL ,
    fname     VARCHAR2 (30) ,
    lname     VARCHAR2 (30)
  ) ;
ALTER TABLE Driver ADD CONSTRAINT Driver_PK PRIMARY KEY ( driver_id ) ;


CREATE TABLE Orders
  (
    order_id         INTEGER NOT NULL ,
    Route_route_id   INTEGER NOT NULL ,
    Truck_plate      VARCHAR2 (10) NOT NULL ,
    Client_client_id INTEGER NOT NULL ,
    order_status     VARCHAR2 (20) ,
    start_date       DATE ,
    end_date         DATE ,
    width            NUMBER ,
    height           NUMBER ,
    load_description VARCHAR2 (1000)
  ) ;
--CREATE UNIQUE INDEX Order__IDX ON Orders(Truck_plate ASC );
--CREATE UNIQUE INDEX Order__IDXv1 ON Order( Client_client_id ASC);
--CREATE UNIQUE INDEX Order__IDXv2 ON Orders ( Route_route_id ASC );
ALTER TABLE Orders ADD CONSTRAINT Orders_PK PRIMARY KEY ( order_id ) ;


CREATE TABLE Payment
  (
    payment_id      INTEGER NOT NULL ,
    price           INTEGER ,
    payment_status  VARCHAR2 (20) ,
    Orders_order_id INTEGER NOT NULL
  ) ;
CREATE UNIQUE INDEX Payment__IDX ON Payment
  (
    payment_id ASC
  )
  ;
CREATE UNIQUE INDEX Payment__IDXv1 ON Payment
  (
    Orders_order_id ASC
  )
  ;
ALTER TABLE Payment ADD CONSTRAINT Payment_PK PRIMARY KEY ( payment_id ) ;


CREATE TABLE Place
  (
    place_id INTEGER NOT NULL ,
    city     VARCHAR2 (50) ,
    street   VARCHAR2 (50) ,
    "number" VARCHAR2 (20) ,
    ZIP      VARCHAR2 (10)
  ) ;
ALTER TABLE Place ADD CONSTRAINT Place_PK PRIMARY KEY ( place_id ) ;


CREATE TABLE Route
  (
    route_id        INTEGER NOT NULL ,
    Place_place_id  INTEGER NOT NULL ,
    Place_place_id1 INTEGER NOT NULL
  ) ;
CREATE UNIQUE INDEX Route_embark_place ON Route
  (
    Place_place_id ASC
  )
  ;
CREATE UNIQUE INDEX Route_release_place ON Route
  (
    Place_place_id1 ASC
  )
  ;
ALTER TABLE Route ADD CONSTRAINT Route_PK PRIMARY KEY ( route_id ) ;


CREATE TABLE Truck
  (
    plate            VARCHAR2 (10) NOT NULL ,
    model            VARCHAR2 (30) ,
    brand            VARCHAR2 (30) ,
    Driver_driver_id INTEGER NOT NULL ,
    width            NUMBER ,
    height           NUMBER
  ) ;
CREATE UNIQUE INDEX Truck_driver ON Truck
  (
    Driver_driver_id ASC
  )
  ;
ALTER TABLE Truck ADD CONSTRAINT Truck_PK PRIMARY KEY ( plate ) ;


CREATE TABLE Notification
  ( payment_id INTEGER NOT NULL
  ) ;
ALTER TABLE Notification ADD CONSTRAINT Notification_PK PRIMARY KEY ( payment_id ) ;


ALTER TABLE Orders ADD CONSTRAINT Orders_Client_FK FOREIGN KEY ( Client_client_id ) REFERENCES Client ( client_id ) ;

ALTER TABLE Orders ADD CONSTRAINT Orders_Route_FK FOREIGN KEY ( Route_route_id ) REFERENCES Route ( route_id ) ;

ALTER TABLE Orders ADD CONSTRAINT Orders_Truck_FK FOREIGN KEY ( Truck_plate ) REFERENCES Truck ( plate ) ;

ALTER TABLE Payment ADD CONSTRAINT Payment_Orders_FK FOREIGN KEY ( Orders_order_id ) REFERENCES Orders ( order_id ) ;

ALTER TABLE Route ADD CONSTRAINT Route_Place_FK FOREIGN KEY ( Place_place_id ) REFERENCES Place ( place_id ) ;

ALTER TABLE Route ADD CONSTRAINT Route_Place_FKv2 FOREIGN KEY ( Place_place_id1 ) REFERENCES Place ( place_id ) ;

ALTER TABLE Truck ADD CONSTRAINT Truck_Driver_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             8
-- ALTER TABLE                             14
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


CREATE SEQUENCE place_seq;
create or replace TRIGGER place_bir 
BEFORE INSERT ON place 
FOR EACH ROW

BEGIN
  SELECT place_seq.NEXTVAL
  INTO   :new.place_id
  FROM   dual;
END;

CREATE SEQUENCE driver_seq;
create or replace TRIGGER driver_bir 
BEFORE INSERT ON driver 
FOR EACH ROW

BEGIN
  SELECT driver_seq.NEXTVAL
  INTO   :new.driver_id
  FROM   dual;
END;

CREATE SEQUENCE client_seq;
create or replace TRIGGER client_bir 
BEFORE INSERT ON client 
FOR EACH ROW

BEGIN
  SELECT client_seq.NEXTVAL
  INTO   :new.client_id
  FROM   dual;
END;

CREATE SEQUENCE route_seq;
create or replace TRIGGER route_bir 
BEFORE INSERT ON route
FOR EACH ROW

BEGIN
  SELECT route_seq.NEXTVAL
  INTO   :new.route_id
  FROM   dual;
END;

CREATE SEQUENCE payment_seq;
create or replace TRIGGER payment_bir 
BEFORE INSERT ON payment
FOR EACH ROW

BEGIN
  SELECT payment_seq.NEXTVAL
  INTO   :new.payment_id
  FROM   dual;
END;

CREATE SEQUENCE orders _seq;
create or replace TRIGGER orders_bir 
BEFORE INSERT ON orders
FOR EACH ROW

BEGIN
  SELECT orders_seq.NEXTVAL
  INTO   :new.order_id
  FROM   dual;
END;
/*
CREATE SEQUENCE notification_seq;

create or replace TRIGGER notification_bir 
BEFORE INSERT ON notification
FOR EACH ROW

BEGIN
  SELECT notification_seq.NEXTVAL
  INTO   :new.notification_id
  FROM   dual;
END;
*/
alter table orders modify truck_plate varchar(10) UNIQUE;

insert into client(FNAME,LNAME,email) values('Piotr','Pawelczyk','aa@aa.bp');
insert into client(FNAME,LNAME,email) values('Anna','Dymna','ba@aa.bp');
insert into client(FNAME,LNAME,email) values('Jan','Noob','ca@aa.bp');

insert into driver(FNAME,LNAME) values('Marcin','Typ');
insert into driver(FNAME,LNAME) values('Joanna','Kierowca');
insert into driver(FNAME,LNAME) values('Janusz','Polak');
insert into driver(FNAME,LNAME) values('Mariusz','Bro');
insert into driver(FNAME,LNAME) values('Tomek','Czech');

insert into truck values('aaa1111','1','Trucker','Trucks',2.5,3.5,1);
insert into truck values('aaa1112','2','Trucker','Trucks',2.4,5.5,1);
insert into truck values('aaa1113','3','Trucker','Trucks',2.3,4,1);
insert into truck values('aaa1114','4','Trucker','Trucks',2.5,4.3,1);
insert into truck values('aaa1115','5','Trucker','Trucks',2.5,6.5,0);

insert into place (client_id,city,street,"numer",zip) values (1,'Gdynia','Morska','130','81-200');
insert into place (client_id,city,street,"numer",zip) values (1,'Warszawa','Marszalkowska','2','82-200');
insert into place (client_id,city,street,"numer",zip) values (3,'Ostrava','Studentska','54','84-200');
insert into place (client_id,city,street,"numer",zip) values (3,'Wroclaw','Stara','20','12-345');
insert into place (client_id,city,street,"numer",zip) values (2,'Berlin','Strasse','444','122340');
insert into place (client_id,city,street,"numer",zip) values (2,'Lublin','Al. Zwyciestwa','12','14-200');
insert into place (client_id,city,street,"numer",zip) values (4,'Munich','Rennen','134','814460');
insert into place (client_id,city,street,"numer",zip) values (4,'Szczecin','Gdynska','120','89-200');

insert into route(start_place_id,end_place_id)values (5,6);
insert into route(start_place_id,end_place_id)values (11,12);
insert into route(start_place_id,end_place_id)values (13,14);
insert into route(start_place_id,end_place_id)values (15,16);
insert into route(start_place_id,end_place_id)values (17,18);

insert into route(start_place_id,end_place_id)values (5,6);
insert into route(start_place_id,end_place_id)values (11,12);
insert into route(start_place_id,end_place_id)values (13,14);
insert into route(start_place_id,end_place_id)values (15,16);
insert into route(start_place_id,end_place_id)values (17,18);

INSERT INTO orders(route_id, client_id, order_status, start_date, width, height, load_description)
VALUES (1,1,'executed','2016-05-01',2,2,'good_stuff');
INSERT INTO orders(route_id, client_id, order_status, start_date, width, height, load_description)
VALUES (3,1,'executed','2016-04-25',2,2,'good_stuff');
INSERT INTO orders(route_id, client_id, order_status, start_date, width, height, load_description)
VALUES (2,3,'not_started','2016-07-05',2,2,'good_stuff');

INSERT INTO orders(route_id, client_id, order_status, start_date, width, height, load_description)
VALUES (4,2,'not_started','2016-05-06',2,2,'good_stuff');
INSERT INTO orders(route_id, client_id, order_status, start_date, width, height, load_description)
VALUES (5,4,'not_started','2016-05-12',2,2,'good_stuff');

update orders set truck_plate='aaa1111' where order_id=2 or order_id=3  or order_id=4; 

insert into payment(price,payment_status,order_id,client_id) VALUES (1500,'unpaid',2,1);
insert into payment(price,payment_status,order_id,client_id) VALUES (1700,'unpaid',3,3);
insert into payment(price,payment_status,order_id,client_id) VALUES (1800,'unpaid',4,1);
insert into payment(price,payment_status,order_id,client_id) VALUES (1900,'unpaid',5,2);
insert into payment(price,payment_status,order_id,client_id) VALUES (1100,'unpaid',6,4);
insert into payment (order_id,client_id,price,payment_status) VALUES(11,1,2000,'paid');
insert into payment (order_id,client_id,price,payment_status) VALUES(12,1,2000,'unpaid');
insert into payment (order_id,client_id,price,payment_status) VALUES(13,1,2000,'paid');


exec notifications '2016-05-06'
select * from notification
select * from payment
select * from orders

update payment set payment_status='unpaid';
update payment set payment_status='paid_but_deleted' where payment_id=11;
update payment set payment_status='paid' where payment_id=13;