-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2016-04-26 15:29:49 CEST
--   site:      SQL Server 2012
--   type:      SQL Server 2012




CREATE
  TABLE Client
  (
    client_id INTEGER NOT NULL IDENTITY(1,1),
    fname     VARCHAR (30) ,
    lname     VARCHAR (30) ,
    email     VARCHAR (50)
  )
  ON "default"
GO
ALTER TABLE Client ADD CONSTRAINT Client_PK PRIMARY KEY CLUSTERED (client_id)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Driver
  (
    driver_id INTEGER NOT NULL IDENTITY(1,1),
    fname     VARCHAR (30) ,
    lname     VARCHAR (30)
  )
  ON "default"
GO
ALTER TABLE Driver ADD CONSTRAINT Driver_PK PRIMARY KEY CLUSTERED (driver_id)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Notification
  (
    payment_id INTEGER NOT NULL
  )
  ON "default"
GO
ALTER TABLE Notification ADD CONSTRAINT Notification_PK PRIMARY KEY CLUSTERED (
payment_id)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Orders
  (
    order_id     INTEGER NOT NULL IDENTITY(1,1),
    route_id     INTEGER NOT NULL ,
    Truck_plate  VARCHAR (10) ,
    client_id    INTEGER NOT NULL ,
    order_status VARCHAR (20) ,
    start_date   DATE ,
    end_date     DATE ,
    width BIGINT ,
    height BIGINT ,
    load_description VARCHAR (1000)
  )
  ON "default"
GO

ALTER TABLE Orders ADD CONSTRAINT Orders_PK PRIMARY KEY CLUSTERED (order_id)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Payment
  (
    payment_id     INTEGER NOT NULL IDENTITY(1,1),
    order_id       INTEGER NOT NULL ,
    client_id      INTEGER NOT NULL ,
    price          INTEGER ,
    payment_status VARCHAR (20)
  )
  ON "default"
GO
CREATE UNIQUE NONCLUSTERED INDEX
Payment__IDX ON Payment
(
  payment_id
)
ON "default"
GO
CREATE UNIQUE NONCLUSTERED INDEX
Payment__IDXv1 ON Payment
(
  order_id
)
ON "default"
GO
ALTER TABLE Payment ADD CONSTRAINT Payment_PK PRIMARY KEY CLUSTERED (payment_id
)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Place
  (
    place_id  INTEGER NOT NULL IDENTITY(1,1),
    client_id INTEGER NOT NULL ,
    city      VARCHAR (50) ,
    street    VARCHAR (50) ,
    numer    VARCHAR (20) ,
    ZIP       VARCHAR (10)
  )
  ON "default"
GO
ALTER TABLE Place ADD CONSTRAINT Place_PK PRIMARY KEY CLUSTERED (place_id)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Route
  (
    route_id       INTEGER NOT NULL IDENTITY(1,1),
    start_place_id INTEGER NOT NULL ,
    end_place_id   INTEGER NOT NULL
  )
  ON "default"
GO

ALTER TABLE Route ADD CONSTRAINT Route_PK PRIMARY KEY CLUSTERED (route_id)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

CREATE
  TABLE Truck
  (
    plate     VARCHAR (10) NOT NULL ,
    driver_id INTEGER NOT NULL ,
    model     VARCHAR (30) ,
    brand     VARCHAR (30) ,
    width BIGINT ,
    height BIGINT ,
    available BIT
  )
  ON "default"
GO
CREATE UNIQUE NONCLUSTERED INDEX
Truck_driver ON Truck
(
  driver_id
)
ON "default"
GO
ALTER TABLE Truck ADD CONSTRAINT Truck_PK PRIMARY KEY CLUSTERED (plate)
WITH
  (
    ALLOW_PAGE_LOCKS = ON ,
    ALLOW_ROW_LOCKS  = ON
  )
  ON "default"
GO

ALTER TABLE Notification
ADD CONSTRAINT Notification_Payment_FK FOREIGN KEY
(
payment_id
)
REFERENCES Payment
(
payment_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Orders
ADD CONSTRAINT Orders_Client_FK FOREIGN KEY
(
client_id
)
REFERENCES Client
(
client_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Orders
ADD CONSTRAINT Orders_Route_FK FOREIGN KEY
(
route_id
)
REFERENCES Route
(
route_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Orders
ADD CONSTRAINT Orders_Truck_FK FOREIGN KEY
(
Truck_plate
)
REFERENCES Truck
(
plate
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Payment
ADD CONSTRAINT Payment_Client_FK FOREIGN KEY
(
client_id
)
REFERENCES Client
(
client_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Payment
ADD CONSTRAINT Payment_Orders_FK FOREIGN KEY
(
order_id
)
REFERENCES Orders
(
order_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Place
ADD CONSTRAINT Place_Client_FK FOREIGN KEY
(
client_id
)
REFERENCES Client
(
client_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Route
ADD CONSTRAINT Route_Place_FK FOREIGN KEY
(
start_place_id
)
REFERENCES Place
(
place_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Route
ADD CONSTRAINT Route_Place_FKv2 FOREIGN KEY
(
end_place_id
)
REFERENCES Place
(
place_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO

ALTER TABLE Truck
ADD CONSTRAINT Truck_Driver_FK FOREIGN KEY
(
driver_id
)
REFERENCES Driver
(
driver_id
)
ON
DELETE
  NO ACTION ON
UPDATE NO ACTION
GO


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             8
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


drop table notification;
drop table payment;
drop table orders;
drop table route;
drop table place;
drop table truck;
drop table driver;
drop table client;
